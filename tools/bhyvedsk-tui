#!/usr/local/bin/cbsd
#v10.0.4
MYARG=""
MYOPTARG="jname remote inter"
MYDESC="Exec login into jail"
CBSDMODULE="bhyve"

. ${subr}
. ${inventory}
init $*

. ${strings}
. ${color}
. ${workdir}/bhyve.subr
. ${tools}

add_disk()
{
    local dsk
    local returncode=0
    local virtio_type="virtio-blk"
    local size
    local i

    while test $returncode != 1 && test $returncode != 250; do
	exec 3>&1
	value=`$DIALOG --backtitle "$backtitle" --ok-label "Add" --title "Add disk for ${jname}" --form "Enter size and virtio_type" 0 0 5 \
	"size (eg: 5g):"       1 1      "${size}"  1  35 22 22 \
	"virtio_type (eg: ahci-hd or virtio-blk):"       2 1      "${virtio_type}"  2  35 12 12 2>&1 1>&3`
	returncode=$?
	exec 3>&-

	case ${returncode} in
	0)
	    i=0
	    for a in ${value}; do
		case $i in
		    0)
			size="${a}"
			;;
		    1)
			virtio_type="${a}"
			;;
		esac
		i=$(( i + 1))
	    done
	    ;;
	*)
	    return 0
	    ;;
	esac
	
	if [ $i -ne 2 ]; then
	    unset size
	    echo "Please fill all inputs"
	    read p
	    returncode=5
	elif [ "${virtio_type}" != "ahci-hd" -a "${virtio_type}" != "virtio-blk" ]; then
	    echo "Unknown type: [${virtio_type}]"
	    read p
	    returncode=5
	else
	    returncode=1
	fi
    done

    dsk="dsk${last_disk}.vhd"

    if ! bhyve_create_dsk ${data}/${dsk} ${size}; then
	$ECHO "${MAGENTA}Error creating disk: ${data}/${dsk}${NORMAL}"
	sleep 5
	return 1
    fi

   if [ -n "${virtio_type}" ]; then
	cbsdsql local "INSERT INTO bhyvedsk ( jname,dsk_controller,dsk_path,dsk_slot  ) VALUES ( \"${jname}\",\"${virtio_type}\",\"${dsk}\","0" )"
    else
	cbsdsql local "INSERT INTO bhyvedsk ( jname,dsk_path,dsk_slot  ) VALUES ( \"${jname}\",\"${dsk}\","0" )"
    fi

    return 0
}

remove_disk()
{
    "$DIALOG" \
    --clear \
    --backtitle "$backtitle" \
    --yesno "Really remove all data and disk ${dsk}.vhd for ${jname}?" 10 50
    case $? in
	0)
	    bhyve_remove_dsk "${dsk}.vhd"
	    return 0
	    ;;
	*)
	    return 0
	    ;;
    esac
}

rename_disk()
{
    local val tag
	val=$( echo ${value} |cut -d":" -f 2 |awk '{printf $1}')
	tag=$( echo "${value}" |awk '/^RENAMED /{print $2}' |cut -d "," -f 1)
	cbsdsql local UPDATE bhyvedsk SET dsk_controller=\"${val}\" WHERE dsk_path=\"${tag}.vhd\" AND jname=\"${jname}\"
}




dsk_menu()
{
    DIALOG="dialog"
    backtitle="cbsd bhyvectl-tui"
    returncode=0
    local dsk_id=1
    local sqldelimer=" "
    local dsklist

    defaultitem="Username:"
	while test $returncode != 2 && test $returncode != 255; do
	    unset dsklist
	    for last_disk in $( seq 1 16 ); do
	        unset dsk_controller${last_disk}
	    done
	    eval $( cbsdsql local SELECT dsk_controller,dsk_path,dsk_slot,dsk_type FROM bhyvedsk WHERE jname=\"${jname}\" | while read dsk_controller dsk_path dsk_slot dsk_type; do
		    echo "export dsk_controller${dsk_id}=\"${dsk_controller}\"
		    echo "export dsk_path${dsk_id}=\"${dsk_path}\"
		    echo "export dsk_slot${dsk_id}=\"${dsk_slot}\"
		    echo "export dsk_type${dsk_id}=\"${dsk_type}\"
		    dsk_id=$(( dsk_id + 1 ))
	    done ) || err 1 "${MAGENTA}Error while create disk map${NORMAL}"

	    for last_disk in $( seq 1 16 ); do
		unset dsk_controller dsk_path dsk_slot dsk_type
		eval dsk_controller="\$dsk_controller$last_disk"
		[ -z "${dsk_controller}" ] && break
		eval dsk_path="\$dsk_path$last_disk"
		eval dsk_slot="\$dsk_slot$last_disk"
		eval dsk_type="\$dsk_type$last_disk"
		dsk_fullpath="${data}/${dsk_path}"

		dsk_realsize=$( du -sh ${dsk_fullpath}|awk '{printf $1}' 2>/dev/null)
		dsk_size=$( stat -f "%z" ${dsk_fullpath} 2>/dev/null)
		if conv2human "$dsk_size"; then
		   dsk_size=$convval
		fi

		[ -z "${dsk_size}" ] && dsk_size="?"
		[ -z "${dsk_realsize}" ] && dsk_realsize="?"

		dsk=$( echo $dsk_path|cut -d "." -f 1 )
		[ -n "${T}" ] && dsk_controller="${T}"
		dsklist="${dsklist} ${dsk},pci=${dsk_slot},type=${dsk_type},size=${dsk_realsize}/${dsk_size}: ${dsk_controller}"
	    done
	    exec 3>&1
	    value=`$DIALOG --clear --ok-label "Add" \
	    --backtitle "$backtitle" \
	    --help-button \
	    --help-label "Exit" \
	    --cancel-label "Destroy" \
	    --default-item "$defaultitem" "$@" \
	    --inputmenu "Storage for ${jname} VM" 20 60 10 \
	    ${dsklist} \
	    2>&1 1>&3`
	    returncode=$?
	    exec 3>&-

	    case $returncode in
	    0)
		    add_disk
		    ;;
	    1)
		    remove_disk
		    ;;
	    2)
		    exit 0
		    ;;
	    3)
		    rename_disk
		    ;;
	    *)
		    break
		    ;;
	    esac
    done
}

[ -z "$jname" ] && jname=$1
[ -z "$jname" ] && err 1 "Please specify jname"
. ${jrcconf}

[ "${emulator}" != "bhyve" ] && err 1 "${MAGENTA}Only for bhyve type VMs${NORMAL}"

dsk_menu

